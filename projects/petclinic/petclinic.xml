<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "https://jeantessier.github.io/dependency-finder/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name simple-name="java.io">java.io</name>
        <class confirmed="no">
            <name simple-name="IOException">java.io.IOException</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="java.lang">java.lang</name>
        <class confirmed="no">
            <name simple-name="Class">java.lang.Class</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.getValueTypes(): java.lang.Class[]</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.valueOf(java.lang.String): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.supports(java.lang.Class): boolean</inbound>
            <feature confirmed="no">
                <name simple-name="isAssignableFrom(java.lang.Class): boolean">java.lang.Class.isAssignableFrom(java.lang.Class): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.supports(java.lang.Class): boolean</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="isInstance(java.lang.Object): boolean">java.lang.Class.isInstance(java.lang.Object): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Enum">java.lang.Enum</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.valueOf(java.lang.String): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</inbound>
            <feature confirmed="no">
                <name simple-name="Enum(java.lang.String, int)">java.lang.Enum.Enum(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.OneToManyResultSetExtractor$ExpectedResults(java.lang.String, int)</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="valueOf(java.lang.Class, java.lang.String): java.lang.Enum">java.lang.Enum.valueOf(java.lang.Class, java.lang.String): java.lang.Enum</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.valueOf(java.lang.String): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Integer">java.lang.Integer</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.getId(): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.id</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.isNew(): boolean</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.setId(java.lang.Integer): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVisitsByPetId(int): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            <feature confirmed="no">
                <name simple-name="intValue(): int">java.lang.Integer.intValue(): int</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="valueOf(int): java.lang.Integer">java.lang.Integer.valueOf(int): java.lang.Integer</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Integer</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Integer</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVisitsByPetId(int): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Number">java.lang.Number</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <feature confirmed="no">
                <name simple-name="intValue(): int">java.lang.Number.intValue(): int</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Object">java.lang.Object</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.addVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.addSpecialty(org.springframework.samples.petclinic.model.Specialty): void</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vets</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.package-info</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VetRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(java.lang.Object, java.lang.Object): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.values(): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults[]</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.addChild(java.lang.Object, java.lang.Object): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.package-info</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.package-info</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVetRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVisitRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.web.CrashController</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(java.lang.Object, java.util.Locale): java.lang.String</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.web.VetController</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map): java.lang.String</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.web.package-info</inbound>
            <feature confirmed="no">
                <name simple-name="Object()">java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.TestTagLoggingFilter()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.BaseEntity()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vets.Vets()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.JdbcPetRowMapper()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.JdbcVetRepositoryImpl(org.springframework.jdbc.core.JdbcTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.JdbcVisitRowMapper()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.JpaOwnerRepositoryImpl()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.JpaPetRepositoryImpl()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.JpaVetRepositoryImpl()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.JpaVisitRepositoryImpl()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.CallMonitoringAspect()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.EntityUtils()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.CrashController.CrashController()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.PetTypeFormatter(org.springframework.samples.petclinic.service.ClinicService)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.PetValidator()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.VetController(org.springframework.samples.petclinic.service.ClinicService)</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="equals(java.lang.Object): boolean">java.lang.Object.equals(java.lang.Object): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="RuntimeException">java.lang.RuntimeException</name>
            <feature confirmed="no">
                <name simple-name="RuntimeException(java.lang.String)">java.lang.RuntimeException.RuntimeException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.CrashController.triggerException(): java.lang.String</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="String">java.lang.String</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.SPRING_PROFILE</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createRootApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createServletApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.getServletFilters(): javax.servlet.Filter[]</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.getServletMappings(): java.lang.String[]</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.TestTagLoggingFilter$TestTagRecord(java.lang.String)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.getValueNames(): java.lang.String[]</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.getValueTypes(): java.lang.Class[]</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.serialize(kieker.common.record.io.IValueSerializer): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.tag</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.getName(): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.name</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.setName(java.lang.String): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.toString(): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.OneToManyResultSetExtractor$ExpectedResults(java.lang.String, int)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.static {}</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.valueOf(java.lang.String): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.findOwnerByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.CrashController.triggerException(): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(java.lang.Object, java.util.Locale): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(org.springframework.samples.petclinic.model.PetType, java.util.Locale): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.REQUIRED</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map): java.lang.String</inbound>
            <feature confirmed="no">
                <name simple-name="equals(java.lang.Object): boolean">java.lang.String.equals(java.lang.Object): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="isEmpty(): boolean">java.lang.String.isEmpty(): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="valueOf(java.lang.Object): java.lang.String">java.lang.String.valueOf(java.lang.Object): java.lang.String</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="StringBuilder">java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            <feature confirmed="no">
                <name simple-name="StringBuilder(java.lang.String)">java.lang.StringBuilder.StringBuilder(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="append(java.lang.String): java.lang.StringBuilder">java.lang.StringBuilder.append(java.lang.String): java.lang.StringBuilder</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="toString(): java.lang.String">java.lang.StringBuilder.toString(): java.lang.String</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="System">java.lang.System</name>
            <feature confirmed="no">
                <name simple-name="arraycopy(java.lang.Object, int, java.lang.Object, int, int): void">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.values(): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults[]</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Throwable">java.lang.Throwable</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="UnsupportedOperationException">java.lang.UnsupportedOperationException</name>
            <feature confirmed="no">
                <name simple-name="UnsupportedOperationException(java.lang.String)">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="java.sql">java.sql</name>
        <class confirmed="no">
            <name simple-name="ResultSet">java.sql.ResultSet</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</inbound>
            <feature confirmed="no">
                <name simple-name="getInt(int): int">java.sql.ResultSet.getInt(int): int</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Integer</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getInt(java.lang.String): int">java.sql.ResultSet.getInt(java.lang.String): int</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Integer</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getObject(java.lang.String): java.lang.Object">java.sql.ResultSet.getObject(java.lang.String): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getObject(java.lang.String, java.lang.Class): java.lang.Object">java.sql.ResultSet.getObject(java.lang.String, java.lang.Class): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getString(java.lang.String): java.lang.String">java.sql.ResultSet.getString(java.lang.String): java.lang.String</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="next(): boolean">java.sql.ResultSet.next(): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="SQLException">java.sql.SQLException</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Integer</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="java.text">java.text</name>
        <class confirmed="no">
            <name simple-name="ParseException">java.text.ParseException</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            <feature confirmed="no">
                <name simple-name="ParseException(java.lang.String, int)">java.text.ParseException.ParseException(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="java.time">java.time</name>
        <class confirmed="no">
            <name simple-name="LocalDate">java.time.LocalDate</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.birthDate</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getBirthDate(): java.time.LocalDate</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.setBirthDate(java.time.LocalDate): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="java.util">java.util</name>
        <class confirmed="no">
            <name simple-name="ArrayList">java.util.ArrayList</name>
            <feature confirmed="no">
                <name simple-name="ArrayList()">java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vets.getVetList(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="ArrayList(java.util.Collection)">java.util.ArrayList.ArrayList(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Collection">java.util.Collection</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.VetRepository.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.findOwnerByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.findPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.findVets(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.findVisitsByPetId(int): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVets(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVisitsByPetId(int): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</inbound>
            <feature confirmed="no">
                <name simple-name="iterator(): java.util.Iterator">java.util.Collection.iterator(): java.util.Iterator</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Collections">java.util.Collections</name>
            <feature confirmed="no">
                <name simple-name="unmodifiableList(java.util.List): java.util.List">java.util.Collections.unmodifiableList(java.util.List): java.util.List</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="HashMap">java.util.HashMap</name>
            <feature confirmed="no">
                <name simple-name="HashMap()">java.util.HashMap.HashMap()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="HashSet">java.util.HashSet</name>
            <feature confirmed="no">
                <name simple-name="HashSet()">java.util.HashSet.HashSet()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisitsInternal(): java.util.Set</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialtiesInternal(): java.util.Set</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Iterator">java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            <feature confirmed="no">
                <name simple-name="hasNext(): boolean">java.util.Iterator.hasNext(): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="next(): java.lang.Object">java.util.Iterator.next(): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="List">java.util.List</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vets.getVetList(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vets.vetList</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVisitsByPetId(int): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</inbound>
            <feature confirmed="no">
                <name simple-name="add(java.lang.Object): boolean">java.util.List.add(java.lang.Object): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="addAll(java.util.Collection): boolean">java.util.List.addAll(java.util.Collection): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="iterator(): java.util.Iterator">java.util.List.iterator(): java.util.Iterator</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="size(): int">java.util.List.size(): int</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Locale">java.util.Locale</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(java.lang.Object, java.util.Locale): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(org.springframework.samples.petclinic.model.PetType, java.util.Locale): java.lang.String</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="Map">java.util.Map</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map): java.lang.String</inbound>
            <feature confirmed="no">
                <name simple-name="put(java.lang.Object, java.lang.Object): java.lang.Object">java.util.Map.put(java.lang.Object, java.lang.Object): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map): java.lang.String</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Set">java.util.Set</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.addVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisitsInternal(): java.util.Set</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.setVisitsInternal(java.util.Set): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.visits</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.addSpecialty(org.springframework.samples.petclinic.model.Specialty): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getNrOfSpecialties(): int</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialtiesInternal(): java.util.Set</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.setSpecialtiesInternal(java.util.Set): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.specialties</inbound>
            <feature confirmed="no">
                <name simple-name="add(java.lang.Object): boolean">java.util.Set.add(java.lang.Object): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.addVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.addSpecialty(org.springframework.samples.petclinic.model.Specialty): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="size(): int">java.util.Set.size(): int</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getNrOfSpecialties(): int</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="javax.persistence">javax.persistence</name>
        <class confirmed="no">
            <name simple-name="CascadeType">javax.persistence.CascadeType</name>
            <feature confirmed="no">
                <name simple-name="ALL">javax.persistence.CascadeType.ALL</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.visits</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Column">javax.persistence.Column</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.name</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.birthDate</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="Entity">javax.persistence.Entity</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Specialty</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vet</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="EntityManager">javax.persistence.EntityManager</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.em</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.em</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.em</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.em</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <feature confirmed="no">
                <name simple-name="createQuery(java.lang.String): javax.persistence.Query">javax.persistence.EntityManager.createQuery(java.lang.String): javax.persistence.Query</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.findAll(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="find(java.lang.Class, java.lang.Object): java.lang.Object">javax.persistence.EntityManager.find(java.lang.Class, java.lang.Object): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="merge(java.lang.Object): java.lang.Object">javax.persistence.EntityManager.merge(java.lang.Object): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="persist(java.lang.Object): void">javax.persistence.EntityManager.persist(java.lang.Object): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="FetchType">javax.persistence.FetchType</name>
            <feature confirmed="no">
                <name simple-name="EAGER">javax.persistence.FetchType.EAGER</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.visits</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.specialties</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="GeneratedValue">javax.persistence.GeneratedValue</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.id</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="GenerationType">javax.persistence.GenerationType</name>
            <feature confirmed="no">
                <name simple-name="IDENTITY">javax.persistence.GenerationType.IDENTITY</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.id</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Id">javax.persistence.Id</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.id</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="JoinColumn">javax.persistence.JoinColumn</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.type</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.specialties</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="JoinTable">javax.persistence.JoinTable</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.specialties</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="ManyToMany">javax.persistence.ManyToMany</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.specialties</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="ManyToOne">javax.persistence.ManyToOne</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.type</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="MappedSuperclass">javax.persistence.MappedSuperclass</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="OneToMany">javax.persistence.OneToMany</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.visits</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="PersistenceContext">javax.persistence.PersistenceContext</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.em</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.em</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.em</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.em</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="Query">javax.persistence.Query</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <feature confirmed="no">
                <name simple-name="getResultList(): java.util.List">javax.persistence.Query.getResultList(): java.util.List</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.findAll(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getSingleResult(): java.lang.Object">javax.persistence.Query.getSingleResult(): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setParameter(java.lang.String, java.lang.Object): javax.persistence.Query">javax.persistence.Query.setParameter(java.lang.String, java.lang.Object): javax.persistence.Query</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Table">javax.persistence.Table</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Specialty</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vet</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="javax.servlet">javax.servlet</name>
        <class confirmed="no">
            <name simple-name="Filter">javax.servlet.Filter</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.getServletFilters(): javax.servlet.Filter[]</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="FilterChain">javax.servlet.FilterChain</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            <feature confirmed="no">
                <name simple-name="doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse): void">javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="FilterConfig">javax.servlet.FilterConfig</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.init(javax.servlet.FilterConfig): void</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="ServletException">javax.servlet.ServletException</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.init(javax.servlet.FilterConfig): void</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="ServletRequest">javax.servlet.ServletRequest</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="ServletResponse">javax.servlet.ServletResponse</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="javax.servlet.http">javax.servlet.http</name>
        <class confirmed="no">
            <name simple-name="HttpServletRequest">javax.servlet.http.HttpServletRequest</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            <feature confirmed="no">
                <name simple-name="getHeader(java.lang.String): java.lang.String">javax.servlet.http.HttpServletRequest.getHeader(java.lang.String): java.lang.String</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getParameter(java.lang.String): java.lang.String">javax.servlet.http.HttpServletRequest.getParameter(java.lang.String): java.lang.String</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="javax.sql">javax.sql</name>
        <class confirmed="no">
            <name simple-name="DataSource">javax.sql.DataSource</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="javax.xml.bind.annotation">javax.xml.bind.annotation</name>
        <class confirmed="no">
            <name simple-name="XmlElement">javax.xml.bind.annotation.XmlElement</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vets.getVetList(): java.util.List</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="XmlRootElement">javax.xml.bind.annotation.XmlRootElement</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vets</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="kieker.common.record">kieker.common.record</name>
        <class confirmed="no">
            <name simple-name="AbstractMonitoringRecord">kieker.common.record.AbstractMonitoringRecord</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord</inbound>
            <feature confirmed="no">
                <name simple-name="AbstractMonitoringRecord()">kieker.common.record.AbstractMonitoringRecord.AbstractMonitoringRecord()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.TestTagLoggingFilter$TestTagRecord(java.lang.String)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="IMonitoringRecord">kieker.common.record.IMonitoringRecord</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="kieker.common.record.io">kieker.common.record.io</name>
        <class confirmed="no">
            <name simple-name="IValueSerializer">kieker.common.record.io.IValueSerializer</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.serialize(kieker.common.record.io.IValueSerializer): void</inbound>
            <feature confirmed="no">
                <name simple-name="putString(java.lang.String): void">kieker.common.record.io.IValueSerializer.putString(java.lang.String): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.serialize(kieker.common.record.io.IValueSerializer): void</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="kieker.monitoring.core.controller">kieker.monitoring.core.controller</name>
        <class confirmed="no">
            <name simple-name="IMonitoringController">kieker.monitoring.core.controller.IMonitoringController</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.TestTagLoggingFilter()</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.controller</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            <feature confirmed="no">
                <name simple-name="newMonitoringRecord(kieker.common.record.IMonitoringRecord): boolean">kieker.monitoring.core.controller.IMonitoringController.newMonitoringRecord(kieker.common.record.IMonitoringRecord): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="MonitoringController">kieker.monitoring.core.controller.MonitoringController</name>
            <feature confirmed="no">
                <name simple-name="getInstance(): kieker.monitoring.core.controller.IMonitoringController">kieker.monitoring.core.controller.MonitoringController.getInstance(): kieker.monitoring.core.controller.IMonitoringController</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.TestTagLoggingFilter()</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.aspectj.lang">org.aspectj.lang</name>
        <class confirmed="no">
            <name simple-name="ProceedingJoinPoint">org.aspectj.lang.ProceedingJoinPoint</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            <feature confirmed="no">
                <name simple-name="proceed(): java.lang.Object">org.aspectj.lang.ProceedingJoinPoint.proceed(): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="toShortString(): java.lang.String">org.aspectj.lang.ProceedingJoinPoint.toShortString(): java.lang.String</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.aspectj.lang.annotation">org.aspectj.lang.annotation</name>
        <class confirmed="no">
            <name simple-name="Around">org.aspectj.lang.annotation.Around</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="Aspect">org.aspectj.lang.annotation.Aspect</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.beans.factory.annotation">org.springframework.beans.factory.annotation</name>
        <class confirmed="no">
            <name simple-name="Autowired">org.springframework.beans.factory.annotation.Autowired</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.JdbcVetRepositoryImpl(org.springframework.jdbc.core.JdbcTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.PetTypeFormatter(org.springframework.samples.petclinic.service.ClinicService)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.VetController(org.springframework.samples.petclinic.service.ClinicService)</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.beans.support">org.springframework.beans.support</name>
        <class confirmed="no">
            <name simple-name="MutableSortDefinition">org.springframework.beans.support.MutableSortDefinition</name>
            <feature confirmed="no">
                <name simple-name="MutableSortDefinition(java.lang.String, boolean, boolean)">org.springframework.beans.support.MutableSortDefinition.MutableSortDefinition(java.lang.String, boolean, boolean)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="PropertyComparator">org.springframework.beans.support.PropertyComparator</name>
            <feature confirmed="no">
                <name simple-name="sort(java.util.List, org.springframework.beans.support.SortDefinition): void">org.springframework.beans.support.PropertyComparator.sort(java.util.List, org.springframework.beans.support.SortDefinition): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="SortDefinition">org.springframework.beans.support.SortDefinition</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.cache.annotation">org.springframework.cache.annotation</name>
        <class confirmed="no">
            <name simple-name="Cacheable">org.springframework.cache.annotation.Cacheable</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVets(): java.util.Collection</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.core.env">org.springframework.core.env</name>
        <class confirmed="no">
            <name simple-name="ConfigurableEnvironment">org.springframework.core.env.ConfigurableEnvironment</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createRootApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
            <feature confirmed="no">
                <name simple-name="setDefaultProfiles(java.lang.String[]): void">org.springframework.core.env.ConfigurableEnvironment.setDefaultProfiles(java.lang.String[]): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createRootApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.dao">org.springframework.dao</name>
        <class confirmed="no">
            <name simple-name="DataAccessException">org.springframework.dao.DataAccessException</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.lang.Object</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="EmptyResultDataAccessException">org.springframework.dao.EmptyResultDataAccessException</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="IncorrectResultSizeDataAccessException">org.springframework.dao.IncorrectResultSizeDataAccessException</name>
            <feature confirmed="no">
                <name simple-name="IncorrectResultSizeDataAccessException(int, int)">org.springframework.dao.IncorrectResultSizeDataAccessException.IncorrectResultSizeDataAccessException(int, int)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.data.jpa.repository">org.springframework.data.jpa.repository</name>
        <class confirmed="no">
            <name simple-name="Query">org.springframework.data.jpa.repository.Query</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository.findPetTypes(): java.util.List</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.data.repository">org.springframework.data.repository</name>
        <class confirmed="no">
            <name simple-name="Repository">org.springframework.data.repository.Repository</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVetRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVisitRepository</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.data.repository.query">org.springframework.data.repository.query</name>
        <class confirmed="no">
            <name simple-name="Param">org.springframework.data.repository.query.Param</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository.findByLastName(java.lang.String): java.util.Collection</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.format">org.springframework.format</name>
        <class confirmed="no">
            <name simple-name="Formatter">org.springframework.format.Formatter</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.format.annotation">org.springframework.format.annotation</name>
        <class confirmed="no">
            <name simple-name="DateTimeFormat">org.springframework.format.annotation.DateTimeFormat</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.birthDate</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.jdbc.core">org.springframework.jdbc.core</name>
        <class confirmed="no">
            <name simple-name="BeanPropertyRowMapper">org.springframework.jdbc.core.BeanPropertyRowMapper</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <feature confirmed="no">
                <name simple-name="BeanPropertyRowMapper()">org.springframework.jdbc.core.BeanPropertyRowMapper.BeanPropertyRowMapper()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.JdbcVetRepositoryImpl$1(org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl)</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="newInstance(java.lang.Class): org.springframework.jdbc.core.BeanPropertyRowMapper">org.springframework.jdbc.core.BeanPropertyRowMapper.newInstance(java.lang.Class): org.springframework.jdbc.core.BeanPropertyRowMapper</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="JdbcTemplate">org.springframework.jdbc.core.JdbcTemplate</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.JdbcVetRepositoryImpl(org.springframework.jdbc.core.JdbcTemplate)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.jdbcTemplate</inbound>
            <feature confirmed="no">
                <name simple-name="query(java.lang.String, org.springframework.jdbc.core.RowMapper): java.util.List">org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper): java.util.List</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="query(java.lang.String, org.springframework.jdbc.core.RowMapper, java.lang.Object[]): java.util.List">org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper, java.lang.Object[]): java.util.List</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="ResultSetExtractor">org.springframework.jdbc.core.ResultSetExtractor</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="RowMapper">org.springframework.jdbc.core.RowMapper</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.JdbcPetVisitExtractor()</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.childMapper</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.rootMapper</inbound>
            <feature confirmed="no">
                <name simple-name="mapRow(java.sql.ResultSet, int): java.lang.Object">org.springframework.jdbc.core.RowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.jdbc.core.namedparam">org.springframework.jdbc.core.namedparam</name>
        <class confirmed="no">
            <name simple-name="BeanPropertySqlParameterSource">org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <feature confirmed="no">
                <name simple-name="BeanPropertySqlParameterSource(java.lang.Object)">org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource.BeanPropertySqlParameterSource(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="MapSqlParameterSource">org.springframework.jdbc.core.namedparam.MapSqlParameterSource</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <feature confirmed="no">
                <name simple-name="MapSqlParameterSource()">org.springframework.jdbc.core.namedparam.MapSqlParameterSource.MapSqlParameterSource()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="addValue(java.lang.String, java.lang.Object): org.springframework.jdbc.core.namedparam.MapSqlParameterSource">org.springframework.jdbc.core.namedparam.MapSqlParameterSource.addValue(java.lang.String, java.lang.Object): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="NamedParameterJdbcTemplate">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.namedParameterJdbcTemplate</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.namedParameterJdbcTemplate</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.jdbcTemplate</inbound>
            <feature confirmed="no">
                <name simple-name="NamedParameterJdbcTemplate(javax.sql.DataSource)">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.NamedParameterJdbcTemplate(javax.sql.DataSource)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="query(java.lang.String, java.util.Map, org.springframework.jdbc.core.ResultSetExtractor): java.lang.Object">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(java.lang.String, java.util.Map, org.springframework.jdbc.core.ResultSetExtractor): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.util.List">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.util.List</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="queryForObject(java.lang.String, java.util.Map, java.lang.Class): java.lang.Object">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String, java.util.Map, java.lang.Class): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="queryForObject(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.lang.Object">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.lang.Object</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource): int">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource): int</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="SqlParameterSource">org.springframework.jdbc.core.namedparam.SqlParameterSource</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.jdbc.core.simple">org.springframework.jdbc.core.simple</name>
        <class confirmed="no">
            <name simple-name="SimpleJdbcInsert">org.springframework.jdbc.core.simple.SimpleJdbcInsert</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.insertOwner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.insertPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.insertVisit</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <feature confirmed="no">
                <name simple-name="SimpleJdbcInsert(javax.sql.DataSource)">org.springframework.jdbc.core.simple.SimpleJdbcInsert.SimpleJdbcInsert(javax.sql.DataSource)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="executeAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource): java.lang.Number">org.springframework.jdbc.core.simple.SimpleJdbcInsert.executeAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource): java.lang.Number</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="usingGeneratedKeyColumns(java.lang.String[]): org.springframework.jdbc.core.simple.SimpleJdbcInsert">org.springframework.jdbc.core.simple.SimpleJdbcInsert.usingGeneratedKeyColumns(java.lang.String[]): org.springframework.jdbc.core.simple.SimpleJdbcInsert</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="withTableName(java.lang.String): org.springframework.jdbc.core.simple.SimpleJdbcInsert">org.springframework.jdbc.core.simple.SimpleJdbcInsert.withTableName(java.lang.String): org.springframework.jdbc.core.simple.SimpleJdbcInsert</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.jmx.export.annotation">org.springframework.jmx.export.annotation</name>
        <class confirmed="no">
            <name simple-name="ManagedAttribute">org.springframework.jmx.export.annotation.ManagedAttribute</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.getCallCount(): int</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.getCallTime(): long</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.isEnabled(): boolean</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.setEnabled(boolean): void</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="ManagedOperation">org.springframework.jmx.export.annotation.ManagedOperation</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.reset(): void</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="ManagedResource">org.springframework.jmx.export.annotation.ManagedResource</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.orm">org.springframework.orm</name>
        <class confirmed="no">
            <name simple-name="ObjectRetrievalFailureException">org.springframework.orm.ObjectRetrievalFailureException</name>
            <feature confirmed="no">
                <name simple-name="ObjectRetrievalFailureException(java.lang.Class, java.lang.Object)">org.springframework.orm.ObjectRetrievalFailureException.ObjectRetrievalFailureException(java.lang.Class, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name simple-name="org.springframework.samples.petclinic">org.springframework.samples.petclinic</name>
        <class confirmed="yes">
            <name simple-name="PetclinicInitializer">org.springframework.samples.petclinic.PetclinicInitializer</name>
            <outbound type="class" confirmed="no">org.springframework.web.servlet.support.AbstractDispatcherServletInitializer</outbound>
            <feature confirmed="yes">
                <name simple-name="PetclinicInitializer()">org.springframework.samples.petclinic.PetclinicInitializer.PetclinicInitializer()</name>
                <outbound type="feature" confirmed="no">org.springframework.web.servlet.support.AbstractDispatcherServletInitializer.AbstractDispatcherServletInitializer()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="SPRING_PROFILE">org.springframework.samples.petclinic.PetclinicInitializer.SPRING_PROFILE</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="createRootApplicationContext(): org.springframework.web.context.WebApplicationContext">org.springframework.samples.petclinic.PetclinicInitializer.createRootApplicationContext(): org.springframework.web.context.WebApplicationContext</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.springframework.core.env.ConfigurableEnvironment</outbound>
                <outbound type="feature" confirmed="no">org.springframework.core.env.ConfigurableEnvironment.setDefaultProfiles(java.lang.String[]): void</outbound>
                <outbound type="class" confirmed="no">org.springframework.web.context.WebApplicationContext</outbound>
                <outbound type="feature" confirmed="no">org.springframework.web.context.support.XmlWebApplicationContext.XmlWebApplicationContext()</outbound>
                <outbound type="feature" confirmed="no">org.springframework.web.context.support.XmlWebApplicationContext.getEnvironment(): org.springframework.core.env.ConfigurableEnvironment</outbound>
                <outbound type="feature" confirmed="no">org.springframework.web.context.support.XmlWebApplicationContext.setConfigLocations(java.lang.String[]): void</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="createServletApplicationContext(): org.springframework.web.context.WebApplicationContext">org.springframework.samples.petclinic.PetclinicInitializer.createServletApplicationContext(): org.springframework.web.context.WebApplicationContext</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.springframework.web.context.WebApplicationContext</outbound>
                <outbound type="feature" confirmed="no">org.springframework.web.context.support.XmlWebApplicationContext.XmlWebApplicationContext()</outbound>
                <outbound type="feature" confirmed="no">org.springframework.web.context.support.XmlWebApplicationContext.setConfigLocation(java.lang.String): void</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getServletFilters(): javax.servlet.Filter[]">org.springframework.samples.petclinic.PetclinicInitializer.getServletFilters(): javax.servlet.Filter[]</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.servlet.Filter</outbound>
                <outbound type="feature" confirmed="no">org.springframework.web.filter.CharacterEncodingFilter.CharacterEncodingFilter(java.lang.String, boolean)</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getServletMappings(): java.lang.String[]">org.springframework.samples.petclinic.PetclinicInitializer.getServletMappings(): java.lang.String[]</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="TestTagLoggingFilter">org.springframework.samples.petclinic.TestTagLoggingFilter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.servlet.Filter</outbound>
            <feature confirmed="yes">
                <name simple-name="TestTagLoggingFilter()">org.springframework.samples.petclinic.TestTagLoggingFilter.TestTagLoggingFilter()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">kieker.monitoring.core.controller.IMonitoringController</outbound>
                <outbound type="feature" confirmed="no">kieker.monitoring.core.controller.MonitoringController.getInstance(): kieker.monitoring.core.controller.IMonitoringController</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.controller</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="controller">org.springframework.samples.petclinic.TestTagLoggingFilter.controller</name>
                <outbound type="class" confirmed="no">kieker.monitoring.core.controller.IMonitoringController</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.TestTagLoggingFilter()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="destroy(): void">org.springframework.samples.petclinic.TestTagLoggingFilter.destroy(): void</name>
            </feature>
            <feature confirmed="yes">
                <name simple-name="doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</name>
                <outbound type="class" confirmed="no">java.io.IOException</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty(): boolean</outbound>
                <outbound type="class" confirmed="no">javax.servlet.FilterChain</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse): void</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletRequest</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletResponse</outbound>
                <outbound type="class" confirmed="no">javax.servlet.http.HttpServletRequest</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getHeader(java.lang.String): java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.servlet.http.HttpServletRequest.getParameter(java.lang.String): java.lang.String</outbound>
                <outbound type="class" confirmed="no">kieker.common.record.IMonitoringRecord</outbound>
                <outbound type="class" confirmed="no">kieker.monitoring.core.controller.IMonitoringController</outbound>
                <outbound type="feature" confirmed="no">kieker.monitoring.core.controller.IMonitoringController.newMonitoringRecord(kieker.common.record.IMonitoringRecord): boolean</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.TestTagLoggingFilter$TestTagRecord(java.lang.String)</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.controller</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="init(javax.servlet.FilterConfig): void">org.springframework.samples.petclinic.TestTagLoggingFilter.init(javax.servlet.FilterConfig): void</name>
                <outbound type="class" confirmed="no">javax.servlet.FilterConfig</outbound>
                <outbound type="class" confirmed="no">javax.servlet.ServletException</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="TestTagLoggingFilter$TestTagRecord">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord</name>
            <outbound type="class" confirmed="no">kieker.common.record.AbstractMonitoringRecord</outbound>
            <outbound type="class" confirmed="no">kieker.common.record.IMonitoringRecord</outbound>
            <feature confirmed="yes">
                <name simple-name="TestTagLoggingFilter$TestTagRecord(java.lang.String)">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.TestTagLoggingFilter$TestTagRecord(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">kieker.common.record.AbstractMonitoringRecord.AbstractMonitoringRecord()</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.tag</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getSize(): int">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.getSize(): int</name>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getValueNames(): java.lang.String[]">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.getValueNames(): java.lang.String[]</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getValueTypes(): java.lang.Class[]">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.getValueTypes(): java.lang.Class[]</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="serialVersionUID">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.serialVersionUID</name>
            </feature>
            <feature confirmed="yes">
                <name simple-name="serialize(kieker.common.record.io.IValueSerializer): void">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.serialize(kieker.common.record.io.IValueSerializer): void</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">kieker.common.record.io.IValueSerializer</outbound>
                <outbound type="feature" confirmed="no">kieker.common.record.io.IValueSerializer.putString(java.lang.String): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.tag</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="tag">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.tag</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.TestTagLoggingFilter$TestTagRecord(java.lang.String)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.TestTagLoggingFilter$TestTagRecord.serialize(kieker.common.record.io.IValueSerializer): void</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name simple-name="org.springframework.samples.petclinic.model">org.springframework.samples.petclinic.model</name>
        <class confirmed="yes">
            <name simple-name="BaseEntity">org.springframework.samples.petclinic.model.BaseEntity</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.persistence.MappedSuperclass</outbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            <feature confirmed="yes">
                <name simple-name="BaseEntity()">org.springframework.samples.petclinic.model.BaseEntity.BaseEntity()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.NamedEntity()</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getId(): java.lang.Integer">org.springframework.samples.petclinic.model.BaseEntity.getId(): java.lang.Integer</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.id</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="id">org.springframework.samples.petclinic.model.BaseEntity.id</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">javax.persistence.GeneratedValue</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.GenerationType.IDENTITY</outbound>
                <outbound type="class" confirmed="no">javax.persistence.Id</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.getId(): java.lang.Integer</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.isNew(): boolean</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.setId(java.lang.Integer): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="isNew(): boolean">org.springframework.samples.petclinic.model.BaseEntity.isNew(): boolean</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.id</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setId(java.lang.Integer): void">org.springframework.samples.petclinic.model.BaseEntity.setId(java.lang.Integer): void</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.id</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="NamedEntity">org.springframework.samples.petclinic.model.NamedEntity</name>
            <outbound type="class" confirmed="no">javax.persistence.MappedSuperclass</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity</outbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Specialty</inbound>
            <feature confirmed="yes">
                <name simple-name="NamedEntity()">org.springframework.samples.petclinic.model.NamedEntity.NamedEntity()</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.BaseEntity()</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.Pet()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.PetType.PetType()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Specialty.Specialty()</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getName(): java.lang.String">org.springframework.samples.petclinic.model.NamedEntity.getName(): java.lang.String</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.name</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.toString(): java.lang.String</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="name">org.springframework.samples.petclinic.model.NamedEntity.name</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.persistence.Column</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.getName(): java.lang.String</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.setName(java.lang.String): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setName(java.lang.String): void">org.springframework.samples.petclinic.model.NamedEntity.setName(java.lang.String): void</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.name</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="toString(): java.lang.String">org.springframework.samples.petclinic.model.NamedEntity.toString(): java.lang.String</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.getName(): java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Owner">org.springframework.samples.petclinic.model.Owner</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getOwner(): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.setOwner(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.findOwnerById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.saveOwner(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveOwner(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <feature confirmed="no">
                <name simple-name="addPet(org.springframework.samples.petclinic.model.Pet): void">org.springframework.samples.petclinic.model.Owner.addPet(org.springframework.samples.petclinic.model.Pet): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getId(): java.lang.Integer">org.springframework.samples.petclinic.model.Owner.getId(): java.lang.Integer</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getPets(): java.util.List">org.springframework.samples.petclinic.model.Owner.getPets(): java.util.List</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="isNew(): boolean">org.springframework.samples.petclinic.model.Owner.isNew(): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setId(java.lang.Integer): void">org.springframework.samples.petclinic.model.Owner.setId(java.lang.Integer): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Person">org.springframework.samples.petclinic.model.Person</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vet</inbound>
            <feature confirmed="no">
                <name simple-name="Person()">org.springframework.samples.petclinic.model.Person.Person()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.Vet()</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="Pet">org.springframework.samples.petclinic.model.Pet</name>
            <outbound type="class" confirmed="no">javax.persistence.Entity</outbound>
            <outbound type="class" confirmed="no">javax.persistence.Table</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity</outbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.findPetById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.savePet(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.savePet(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.supports(java.lang.Class): boolean</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            <feature confirmed="yes">
                <name simple-name="Pet()">org.springframework.samples.petclinic.model.Pet.Pet()</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.NamedEntity()</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.JdbcPet()</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="addVisit(org.springframework.samples.petclinic.model.Visit): void">org.springframework.samples.petclinic.model.Pet.addVisit(org.springframework.samples.petclinic.model.Visit): void</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object): boolean</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisitsInternal(): java.util.Set</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.setPet(org.springframework.samples.petclinic.model.Pet): void</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="birthDate">org.springframework.samples.petclinic.model.Pet.birthDate</name>
                <outbound type="class" confirmed="no">java.time.LocalDate</outbound>
                <outbound type="class" confirmed="no">javax.persistence.Column</outbound>
                <outbound type="class" confirmed="no">org.springframework.format.annotation.DateTimeFormat</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getBirthDate(): java.time.LocalDate</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.setBirthDate(java.time.LocalDate): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getBirthDate(): java.time.LocalDate">org.springframework.samples.petclinic.model.Pet.getBirthDate(): java.time.LocalDate</name>
                <outbound type="class" confirmed="no">java.time.LocalDate</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.birthDate</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getId(): java.lang.Integer">org.springframework.samples.petclinic.model.Pet.getId(): java.lang.Integer</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getName(): java.lang.String">org.springframework.samples.petclinic.model.Pet.getName(): java.lang.String</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getOwner(): org.springframework.samples.petclinic.model.Owner">org.springframework.samples.petclinic.model.Pet.getOwner(): org.springframework.samples.petclinic.model.Owner</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.owner</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getType(): org.springframework.samples.petclinic.model.PetType">org.springframework.samples.petclinic.model.Pet.getType(): org.springframework.samples.petclinic.model.PetType</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.type</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getVisits(): java.util.List">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableList(java.util.List): java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">org.springframework.beans.support.MutableSortDefinition.MutableSortDefinition(java.lang.String, boolean, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.springframework.beans.support.PropertyComparator.sort(java.util.List, org.springframework.beans.support.SortDefinition): void</outbound>
                <outbound type="class" confirmed="no">org.springframework.beans.support.SortDefinition</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisitsInternal(): java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getVisitsInternal(): java.util.Set">org.springframework.samples.petclinic.model.Pet.getVisitsInternal(): java.util.Set</name>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.visits</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.addVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisits(): java.util.List</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="isNew(): boolean">org.springframework.samples.petclinic.model.Pet.isNew(): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="owner">org.springframework.samples.petclinic.model.Pet.owner</name>
                <outbound type="class" confirmed="no">javax.persistence.JoinColumn</outbound>
                <outbound type="class" confirmed="no">javax.persistence.ManyToOne</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getOwner(): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.setOwner(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setBirthDate(java.time.LocalDate): void">org.springframework.samples.petclinic.model.Pet.setBirthDate(java.time.LocalDate): void</name>
                <outbound type="class" confirmed="no">java.time.LocalDate</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.birthDate</outbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setId(java.lang.Integer): void">org.springframework.samples.petclinic.model.Pet.setId(java.lang.Integer): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setOwner(org.springframework.samples.petclinic.model.Owner): void">org.springframework.samples.petclinic.model.Pet.setOwner(org.springframework.samples.petclinic.model.Owner): void</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.owner</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setType(org.springframework.samples.petclinic.model.PetType): void">org.springframework.samples.petclinic.model.Pet.setType(org.springframework.samples.petclinic.model.PetType): void</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.type</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setVisitsInternal(java.util.Set): void">org.springframework.samples.petclinic.model.Pet.setVisitsInternal(java.util.Set): void</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.visits</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="type">org.springframework.samples.petclinic.model.Pet.type</name>
                <outbound type="class" confirmed="no">javax.persistence.JoinColumn</outbound>
                <outbound type="class" confirmed="no">javax.persistence.ManyToOne</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getType(): org.springframework.samples.petclinic.model.PetType</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.setType(org.springframework.samples.petclinic.model.PetType): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="visits">org.springframework.samples.petclinic.model.Pet.visits</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.CascadeType.ALL</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.FetchType.EAGER</outbound>
                <outbound type="class" confirmed="no">javax.persistence.OneToMany</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getVisitsInternal(): java.util.Set</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.setVisitsInternal(java.util.Set): void</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="PetType">org.springframework.samples.petclinic.model.PetType</name>
            <outbound type="class" confirmed="no">javax.persistence.Entity</outbound>
            <outbound type="class" confirmed="no">javax.persistence.Table</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity</outbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getType(): org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.setType(org.springframework.samples.petclinic.model.PetType): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.type</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(java.lang.Object, java.util.Locale): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(org.springframework.samples.petclinic.model.PetType, java.util.Locale): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            <feature confirmed="yes">
                <name simple-name="PetType()">org.springframework.samples.petclinic.model.PetType.PetType()</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.NamedEntity()</outbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getId(): java.lang.Integer">org.springframework.samples.petclinic.model.PetType.getId(): java.lang.Integer</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getName(): java.lang.String">org.springframework.samples.petclinic.model.PetType.getName(): java.lang.String</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(org.springframework.samples.petclinic.model.PetType, java.util.Locale): java.lang.String</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="Specialty">org.springframework.samples.petclinic.model.Specialty</name>
            <outbound type="class" confirmed="no">javax.persistence.Entity</outbound>
            <outbound type="class" confirmed="no">javax.persistence.Table</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity</outbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.addSpecialty(org.springframework.samples.petclinic.model.Specialty): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <feature confirmed="yes">
                <name simple-name="Specialty()">org.springframework.samples.petclinic.model.Specialty.Specialty()</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.NamedEntity.NamedEntity()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="Vet">org.springframework.samples.petclinic.model.Vet</name>
            <outbound type="class" confirmed="no">javax.persistence.Entity</outbound>
            <outbound type="class" confirmed="no">javax.persistence.Table</outbound>
            <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Person</outbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            <feature confirmed="yes">
                <name simple-name="Vet()">org.springframework.samples.petclinic.model.Vet.Vet()</name>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Person.Person()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="addSpecialty(org.springframework.samples.petclinic.model.Specialty): void">org.springframework.samples.petclinic.model.Vet.addSpecialty(org.springframework.samples.petclinic.model.Specialty): void</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.add(java.lang.Object): boolean</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Specialty</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialtiesInternal(): java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getId(): java.lang.Integer">org.springframework.samples.petclinic.model.Vet.getId(): java.lang.Integer</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getNrOfSpecialties(): int">org.springframework.samples.petclinic.model.Vet.getNrOfSpecialties(): int</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.size(): int</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialtiesInternal(): java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getSpecialties(): java.util.List">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.unmodifiableList(java.util.List): java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <outbound type="feature" confirmed="no">org.springframework.beans.support.MutableSortDefinition.MutableSortDefinition(java.lang.String, boolean, boolean)</outbound>
                <outbound type="feature" confirmed="no">org.springframework.beans.support.PropertyComparator.sort(java.util.List, org.springframework.beans.support.SortDefinition): void</outbound>
                <outbound type="class" confirmed="no">org.springframework.beans.support.SortDefinition</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialtiesInternal(): java.util.Set</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getSpecialtiesInternal(): java.util.Set">org.springframework.samples.petclinic.model.Vet.getSpecialtiesInternal(): java.util.Set</name>
                <outbound type="feature" confirmed="no">java.util.HashSet.HashSet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.specialties</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.addSpecialty(org.springframework.samples.petclinic.model.Specialty): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getNrOfSpecialties(): int</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialties(): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setSpecialtiesInternal(java.util.Set): void">org.springframework.samples.petclinic.model.Vet.setSpecialtiesInternal(java.util.Set): void</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.specialties</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="specialties">org.springframework.samples.petclinic.model.Vet.specialties</name>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.FetchType.EAGER</outbound>
                <outbound type="class" confirmed="no">javax.persistence.JoinColumn</outbound>
                <outbound type="class" confirmed="no">javax.persistence.JoinTable</outbound>
                <outbound type="class" confirmed="no">javax.persistence.ManyToMany</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.getSpecialtiesInternal(): java.util.Set</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.setSpecialtiesInternal(java.util.Set): void</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="Vets">org.springframework.samples.petclinic.model.Vets</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlRootElement</outbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showJsonVetList(): org.springframework.samples.petclinic.model.Vets</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showXmlVetList(): org.springframework.samples.petclinic.model.Vets</inbound>
            <feature confirmed="yes">
                <name simple-name="Vets()">org.springframework.samples.petclinic.model.Vets.Vets()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getVetList(): java.util.List">org.springframework.samples.petclinic.model.Vets.getVetList(): java.util.List</name>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.xml.bind.annotation.XmlElement</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vets.vetList</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="vetList">org.springframework.samples.petclinic.model.Vets.vetList</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vets.getVetList(): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Visit">org.springframework.samples.petclinic.model.Visit</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.addVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(java.lang.Object, java.lang.Object): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(org.springframework.samples.petclinic.repository.jdbc.JdbcPet, org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.saveVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <feature confirmed="no">
                <name simple-name="Visit()">org.springframework.samples.petclinic.model.Visit.Visit()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getDate(): java.time.LocalDate">org.springframework.samples.petclinic.model.Visit.getDate(): java.time.LocalDate</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getDescription(): java.lang.String">org.springframework.samples.petclinic.model.Visit.getDescription(): java.lang.String</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getId(): java.lang.Integer">org.springframework.samples.petclinic.model.Visit.getId(): java.lang.Integer</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getPet(): org.springframework.samples.petclinic.model.Pet">org.springframework.samples.petclinic.model.Visit.getPet(): org.springframework.samples.petclinic.model.Pet</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="isNew(): boolean">org.springframework.samples.petclinic.model.Visit.isNew(): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setDate(java.time.LocalDate): void">org.springframework.samples.petclinic.model.Visit.setDate(java.time.LocalDate): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setDescription(java.lang.String): void">org.springframework.samples.petclinic.model.Visit.setDescription(java.lang.String): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setId(java.lang.Integer): void">org.springframework.samples.petclinic.model.Visit.setId(java.lang.Integer): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setPet(org.springframework.samples.petclinic.model.Pet): void">org.springframework.samples.petclinic.model.Visit.setPet(org.springframework.samples.petclinic.model.Pet): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.addVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="package-info">org.springframework.samples.petclinic.model.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name simple-name="org.springframework.samples.petclinic.repository">org.springframework.samples.petclinic.repository</name>
        <class confirmed="yes">
            <name simple-name="OwnerRepository">org.springframework.samples.petclinic.repository.OwnerRepository</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.ownerRepository</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ownerRepository</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveOwner(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <feature confirmed="yes">
                <name simple-name="findById(int): org.springframework.samples.petclinic.model.Owner">org.springframework.samples.petclinic.repository.OwnerRepository.findById(int): org.springframework.samples.petclinic.model.Owner</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findByLastName(java.lang.String): java.util.Collection">org.springframework.samples.petclinic.repository.OwnerRepository.findByLastName(java.lang.String): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerByLastName(java.lang.String): java.util.Collection</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="save(org.springframework.samples.petclinic.model.Owner): void">org.springframework.samples.petclinic.repository.OwnerRepository.save(org.springframework.samples.petclinic.model.Owner): void</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveOwner(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="PetRepository">org.springframework.samples.petclinic.repository.PetRepository</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.petRepository</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.savePet(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <feature confirmed="yes">
                <name simple-name="findById(int): org.springframework.samples.petclinic.model.Pet">org.springframework.samples.petclinic.repository.PetRepository.findById(int): org.springframework.samples.petclinic.model.Pet</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findPetTypes(): java.util.List">org.springframework.samples.petclinic.repository.PetRepository.findPetTypes(): java.util.List</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetTypes(): java.util.Collection</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="save(org.springframework.samples.petclinic.model.Pet): void">org.springframework.samples.petclinic.repository.PetRepository.save(org.springframework.samples.petclinic.model.Pet): void</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.savePet(org.springframework.samples.petclinic.model.Pet): void</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="VetRepository">org.springframework.samples.petclinic.repository.VetRepository</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVetRepository</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVets(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.vetRepository</inbound>
            <feature confirmed="yes">
                <name simple-name="findAll(): java.util.Collection">org.springframework.samples.petclinic.repository.VetRepository.findAll(): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVets(): java.util.Collection</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="VisitRepository">org.springframework.samples.petclinic.repository.VisitRepository</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVisitRepository</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVisitsByPetId(int): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.visitRepository</inbound>
            <feature confirmed="yes">
                <name simple-name="findByPetId(java.lang.Integer): java.util.List">org.springframework.samples.petclinic.repository.VisitRepository.findByPetId(java.lang.Integer): java.util.List</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVisitsByPetId(int): java.util.Collection</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="save(org.springframework.samples.petclinic.model.Visit): void">org.springframework.samples.petclinic.repository.VisitRepository.save(org.springframework.samples.petclinic.model.Visit): void</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name simple-name="org.springframework.samples.petclinic.repository.jdbc">org.springframework.samples.petclinic.repository.jdbc</name>
        <class confirmed="yes">
            <name simple-name="JdbcOwnerRepositoryImpl">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Repository</outbound>
            <feature confirmed="yes">
                <name simple-name="JdbcOwnerRepositoryImpl(javax.sql.DataSource)">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.sql.DataSource</outbound>
                <outbound type="class" confirmed="no">org.springframework.beans.factory.annotation.Autowired</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.NamedParameterJdbcTemplate(javax.sql.DataSource)</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.SimpleJdbcInsert(javax.sql.DataSource)</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.usingGeneratedKeyColumns(java.lang.String[]): org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.withTableName(java.lang.String): org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.insertOwner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.namedParameterJdbcTemplate</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findById(int): org.springframework.samples.petclinic.model.Owner">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.springframework.dao.EmptyResultDataAccessException</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper.newInstance(java.lang.Class): org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">org.springframework.orm.ObjectRetrievalFailureException.ObjectRetrievalFailureException(java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.namedParameterJdbcTemplate</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findByLastName(java.lang.String): java.util.Collection">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object): java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String): java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString(): java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper.newInstance(java.lang.Class): org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.util.List</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.namedParameterJdbcTemplate</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getPetTypes(): java.util.Collection">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper.newInstance(java.lang.Class): org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.namedParameterJdbcTemplate</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="insertOwner">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.insertOwner</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="loadOwnersPetsAndVisits(java.util.List): void">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext(): boolean</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next(): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator(): java.util.Iterator</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext(): boolean</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next(): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator(): java.util.Iterator</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.ResultSetExtractor</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(java.lang.String, java.util.Map, org.springframework.jdbc.core.ResultSetExtractor): java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Owner.addPet(org.springframework.samples.petclinic.model.Pet): void</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Owner.getId(): java.lang.Integer</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.namedParameterJdbcTemplate</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.getTypeId(): int</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setType(org.springframework.samples.petclinic.model.PetType): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.JdbcPetVisitExtractor()</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadOwnersPetsAndVisits(java.util.List): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="namedParameterJdbcTemplate">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.namedParameterJdbcTemplate</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.JdbcOwnerRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.getPetTypes(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="save(org.springframework.samples.petclinic.model.Owner): void">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.intValue(): int</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource.BeanPropertySqlParameterSource(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource): int</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.SqlParameterSource</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.executeAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource): java.lang.Number</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Owner.isNew(): boolean</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Owner.setId(java.lang.Integer): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.insertOwner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.namedParameterJdbcTemplate</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JdbcPet">org.springframework.samples.petclinic.repository.jdbc.JdbcPet</name>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(java.lang.Object, java.lang.Object): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(org.springframework.samples.petclinic.repository.jdbc.JdbcPet, org.springframework.samples.petclinic.model.Visit): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            <feature confirmed="yes">
                <name simple-name="JdbcPet()">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.JdbcPet()</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.Pet()</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="addVisit(org.springframework.samples.petclinic.model.Visit): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.addVisit(org.springframework.samples.petclinic.model.Visit): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(org.springframework.samples.petclinic.repository.jdbc.JdbcPet, org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getOwnerId(): int">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.getOwnerId(): int</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.ownerId</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getTypeId(): int">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.getTypeId(): int</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.typeId</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="ownerId">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.ownerId</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.getOwnerId(): int</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setOwnerId(int): void</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setBirthDate(java.time.LocalDate): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setBirthDate(java.time.LocalDate): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setId(java.lang.Integer): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setId(java.lang.Integer): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setName(java.lang.String): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setName(java.lang.String): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setOwnerId(int): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setOwnerId(int): void</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.ownerId</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setType(org.springframework.samples.petclinic.model.PetType): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setType(org.springframework.samples.petclinic.model.PetType): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setTypeId(int): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setTypeId(int): void</name>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.typeId</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="typeId">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.typeId</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.getTypeId(): int</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setTypeId(int): void</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JdbcPetRepositoryImpl">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Repository</outbound>
            <feature confirmed="yes">
                <name simple-name="JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.sql.DataSource</outbound>
                <outbound type="class" confirmed="no">org.springframework.beans.factory.annotation.Autowired</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.NamedParameterJdbcTemplate(javax.sql.DataSource)</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.SimpleJdbcInsert(javax.sql.DataSource)</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.usingGeneratedKeyColumns(java.lang.String[]): org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.withTableName(java.lang.String): org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.insertPet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.namedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.ownerRepository</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.time.LocalDate</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.MapSqlParameterSource</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.MapSqlParameterSource.MapSqlParameterSource()</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.MapSqlParameterSource.addValue(java.lang.String, java.lang.Object): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Owner.getId(): java.lang.Integer</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getBirthDate(): java.time.LocalDate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Pet.getId(): java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Pet.getName(): java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getOwner(): org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getType(): org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.PetType.getId(): java.lang.Integer</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findById(int): org.springframework.samples.petclinic.model.Pet">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue(): int</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.springframework.dao.EmptyResultDataAccessException</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String, java.util.Map, java.lang.Class): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">org.springframework.orm.ObjectRetrievalFailureException.ObjectRetrievalFailureException(java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Owner.getPets(): java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository.findById(int): org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.namedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.ownerRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findPetTypes(): java.util.List">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper.newInstance(java.lang.Class): org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.namedParameterJdbcTemplate</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="insertPet">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.insertPet</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="namedParameterJdbcTemplate">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.namedParameterJdbcTemplate</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="ownerRepository">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.ownerRepository</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.JdbcPetRepositoryImpl(javax.sql.DataSource, org.springframework.samples.petclinic.repository.OwnerRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="save(org.springframework.samples.petclinic.model.Pet): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.intValue(): int</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.MapSqlParameterSource</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource): int</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.SqlParameterSource</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.executeAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource): java.lang.Number</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Pet.isNew(): boolean</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Pet.setId(java.lang.Integer): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.createPetParameterSource(org.springframework.samples.petclinic.model.Pet): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.insertPet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.namedParameterJdbcTemplate</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JdbcPetRowMapper">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
            <feature confirmed="yes">
                <name simple-name="JdbcPetRowMapper()">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.JdbcPetRowMapper()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.JdbcPetVisitExtractor()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapRow(java.sql.ResultSet, int): java.lang.Object">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.repository.jdbc.JdbcPet</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getInt(java.lang.String): int</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getObject(java.lang.String, java.lang.Class): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getString(java.lang.String): java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="class" confirmed="no">java.time.LocalDate</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.JdbcPet()</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setBirthDate(java.time.LocalDate): void</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setId(java.lang.Integer): void</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setName(java.lang.String): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setOwnerId(int): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.setTypeId(int): void</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JdbcPetVisitExtractor">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor</name>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor</outbound>
            <feature confirmed="yes">
                <name simple-name="JdbcPetVisitExtractor()">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.JdbcPetVisitExtractor()</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.JdbcPetRowMapper()</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.JdbcVisitRowMapper()</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper)</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="addChild(java.lang.Object, java.lang.Object): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(java.lang.Object, java.lang.Object): void</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(org.springframework.samples.petclinic.repository.jdbc.JdbcPet, org.springframework.samples.petclinic.model.Visit): void</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="addChild(org.springframework.samples.petclinic.repository.jdbc.JdbcPet, org.springframework.samples.petclinic.model.Visit): void">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(org.springframework.samples.petclinic.repository.jdbc.JdbcPet, org.springframework.samples.petclinic.model.Visit): void</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.repository.jdbc.JdbcPet.addVisit(org.springframework.samples.petclinic.model.Visit): void</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.addChild(java.lang.Object, java.lang.Object): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapForeignKey(java.sql.ResultSet): java.lang.Integer">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getInt(java.lang.String): int</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getObject(java.lang.String): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapForeignKey(java.sql.ResultSet): java.lang.Object">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Integer</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapPrimaryKey(java.sql.ResultSet): java.lang.Integer">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Integer</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getInt(java.lang.String): int</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapPrimaryKey(java.sql.ResultSet): java.lang.Object">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Integer</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JdbcVetRepositoryImpl">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VetRepository</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Repository</outbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.JdbcVetRepositoryImpl$1(org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.this$0</inbound>
            <feature confirmed="yes">
                <name simple-name="JdbcVetRepositoryImpl(org.springframework.jdbc.core.JdbcTemplate)">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.JdbcVetRepositoryImpl(org.springframework.jdbc.core.JdbcTemplate)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.springframework.beans.factory.annotation.Autowired</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.JdbcTemplate</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.jdbcTemplate</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findAll(): java.util.Collection">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue(): int</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext(): boolean</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next(): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection): boolean</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator(): java.util.Iterator</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper.newInstance(java.lang.Class): org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.JdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper): java.util.List</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper, java.lang.Object[]): java.util.List</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Specialty</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vet.addSpecialty(org.springframework.samples.petclinic.model.Specialty): void</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Vet.getId(): java.lang.Integer</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.JdbcVetRepositoryImpl$1(org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl)</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.jdbcTemplate</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="jdbcTemplate">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.jdbcTemplate</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.JdbcTemplate</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.JdbcVetRepositoryImpl(org.springframework.jdbc.core.JdbcTemplate)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JdbcVetRepositoryImpl$1">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1</name>
            <outbound type="class" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper</outbound>
            <feature confirmed="yes">
                <name simple-name="JdbcVetRepositoryImpl$1(org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl)">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.JdbcVetRepositoryImpl$1(org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl)</name>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.BeanPropertyRowMapper.BeanPropertyRowMapper()</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.this$0</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapRow(java.sql.ResultSet, int): java.lang.Integer">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Integer</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getInt(int): int</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapRow(java.sql.ResultSet, int): java.lang.Object">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.mapRow(java.sql.ResultSet, int): java.lang.Integer</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="this$0">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.this$0</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl$1.JdbcVetRepositoryImpl$1(org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl)</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JdbcVisitRepositoryImpl">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Repository</outbound>
            <feature confirmed="yes">
                <name simple-name="JdbcVisitRepositoryImpl(javax.sql.DataSource)">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.sql.DataSource</outbound>
                <outbound type="class" confirmed="no">org.springframework.beans.factory.annotation.Autowired</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.NamedParameterJdbcTemplate(javax.sql.DataSource)</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.SimpleJdbcInsert(javax.sql.DataSource)</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.usingGeneratedKeyColumns(java.lang.String[]): org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.withTableName(java.lang.String): org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.insertVisit</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.jdbcTemplate</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.time.LocalDate</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.MapSqlParameterSource</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.MapSqlParameterSource.MapSqlParameterSource()</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.MapSqlParameterSource.addValue(java.lang.String, java.lang.Object): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Pet.getId(): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.getDate(): java.time.LocalDate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.getDescription(): java.lang.String</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.getId(): java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.getPet(): org.springframework.samples.petclinic.model.Pet</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findByPetId(java.lang.Integer): java.util.List">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext(): boolean</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next(): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator(): java.util.Iterator</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.util.List</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper): java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.setPet(org.springframework.samples.petclinic.model.Pet): void</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRowMapper.JdbcPetRowMapper()</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.jdbcTemplate</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.JdbcVisitRowMapper()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="insertVisit">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.insertVisit</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="jdbcTemplate">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.jdbcTemplate</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.JdbcVisitRepositoryImpl(javax.sql.DataSource)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="save(org.springframework.samples.petclinic.model.Visit): void">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Number</outbound>
                <outbound type="feature" confirmed="no">java.lang.Number.intValue(): int</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.MapSqlParameterSource</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.namedparam.SqlParameterSource</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.simple.SimpleJdbcInsert.executeAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource): java.lang.Number</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.isNew(): boolean</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.setId(java.lang.Integer): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.createVisitParameterSource(org.springframework.samples.petclinic.model.Visit): org.springframework.jdbc.core.namedparam.MapSqlParameterSource</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.insertVisit</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JdbcVisitRowMapper">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
            <feature confirmed="yes">
                <name simple-name="JdbcVisitRowMapper()">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.JdbcVisitRowMapper()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.JdbcPetVisitExtractor()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapRow(java.sql.ResultSet, int): java.lang.Object">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): org.springframework.samples.petclinic.model.Visit</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getInt(java.lang.String): int</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getObject(java.lang.String, java.lang.Class): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.getString(java.lang.String): java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="class" confirmed="no">java.time.LocalDate</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.Visit()</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.setDate(java.time.LocalDate): void</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.setDescription(java.lang.String): void</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.setId(java.lang.Integer): void</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="OneToManyResultSetExtractor">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.jdbc.core.ResultSetExtractor</outbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor</inbound>
            <feature confirmed="yes">
                <name simple-name="OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper)">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper)</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetVisitExtractor.JdbcPetVisitExtractor()</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ANY</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.childMapper</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.expectedResults</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.rootMapper</outbound>
                <outbound type="feature" confirmed="no">org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String): void</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper)</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="addChild(java.lang.Object, java.lang.Object): void">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.addChild(java.lang.Object, java.lang.Object): void</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="childMapper">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.childMapper</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="expectedResults">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.expectedResults</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="extractData(java.sql.ResultSet): java.lang.Object">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.springframework.dao.DataAccessException</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="extractData(java.sql.ResultSet): java.util.List">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.equals(java.lang.Object): boolean</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="feature" confirmed="no">java.sql.ResultSet.next(): boolean</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object): boolean</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size(): int</outbound>
                <outbound type="feature" confirmed="no">org.springframework.dao.IncorrectResultSizeDataAccessException.IncorrectResultSizeDataAccessException(int, int)</outbound>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <outbound type="feature" confirmed="no">org.springframework.jdbc.core.RowMapper.mapRow(java.sql.ResultSet, int): java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.AT_LEAST_ONE</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ONE_AND_ONLY_ONE</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ONE_OR_NONE</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.addChild(java.lang.Object, java.lang.Object): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.childMapper</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.expectedResults</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.rootMapper</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.lang.Object</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapForeignKey(java.sql.ResultSet): java.lang.Object">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapForeignKey(java.sql.ResultSet): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="mapPrimaryKey(java.sql.ResultSet): java.lang.Object">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.mapPrimaryKey(java.sql.ResultSet): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.sql.ResultSet</outbound>
                <outbound type="class" confirmed="no">java.sql.SQLException</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="rootMapper">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.rootMapper</name>
                <outbound type="class" confirmed="no">org.springframework.jdbc.core.RowMapper</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="OneToManyResultSetExtractor$ExpectedResults">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.expectedResults</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            <feature confirmed="yes">
                <name simple-name="ANY">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ANY</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="AT_LEAST_ONE">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.AT_LEAST_ONE</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="ENUM$VALUES">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ENUM$VALUES</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.values(): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults[]</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="ONE_AND_ONLY_ONE">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ONE_AND_ONLY_ONE</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="ONE_OR_NONE">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ONE_OR_NONE</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.static {}</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.extractData(java.sql.ResultSet): java.util.List</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="OneToManyResultSetExtractor$ExpectedResults(java.lang.String, int)">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.OneToManyResultSetExtractor$ExpectedResults(java.lang.String, int)</name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.static {}</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="static {}">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.static {}</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ANY</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.AT_LEAST_ONE</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ENUM$VALUES</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ONE_AND_ONLY_ONE</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ONE_OR_NONE</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.OneToManyResultSetExtractor$ExpectedResults(java.lang.String, int)</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="valueOf(java.lang.String): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.valueOf(java.lang.String): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String): java.lang.Enum</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="values(): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults[]">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.values(): org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults[]</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults.ENUM$VALUES</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="package-info">org.springframework.samples.petclinic.repository.jdbc.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name simple-name="org.springframework.samples.petclinic.repository.jpa">org.springframework.samples.petclinic.repository.jpa</name>
        <class confirmed="yes">
            <name simple-name="JpaOwnerRepositoryImpl">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Repository</outbound>
            <feature confirmed="yes">
                <name simple-name="JpaOwnerRepositoryImpl()">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.JpaOwnerRepositoryImpl()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="em">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.em</name>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="class" confirmed="no">javax.persistence.PersistenceContext</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findById(int): org.springframework.samples.petclinic.model.Owner">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Owner</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.createQuery(java.lang.String): javax.persistence.Query</outbound>
                <outbound type="class" confirmed="no">javax.persistence.Query</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.Query.getSingleResult(): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.Query.setParameter(java.lang.String, java.lang.Object): javax.persistence.Query</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.em</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findByLastName(java.lang.String): java.util.Collection">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.findByLastName(java.lang.String): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object): java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String): java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString(): java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.createQuery(java.lang.String): javax.persistence.Query</outbound>
                <outbound type="class" confirmed="no">javax.persistence.Query</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.Query.getResultList(): java.util.List</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.Query.setParameter(java.lang.String, java.lang.Object): javax.persistence.Query</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.em</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="save(org.springframework.samples.petclinic.model.Owner): void">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.save(org.springframework.samples.petclinic.model.Owner): void</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.merge(java.lang.Object): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.persist(java.lang.Object): void</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Owner.getId(): java.lang.Integer</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.em</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JpaPetRepositoryImpl">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Repository</outbound>
            <feature confirmed="yes">
                <name simple-name="JpaPetRepositoryImpl()">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.JpaPetRepositoryImpl()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="em">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.em</name>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="class" confirmed="no">javax.persistence.PersistenceContext</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findPetTypes(): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findById(int): org.springframework.samples.petclinic.model.Pet">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.find(java.lang.Class, java.lang.Object): java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.em</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findPetTypes(): java.util.List">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.findPetTypes(): java.util.List</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.createQuery(java.lang.String): javax.persistence.Query</outbound>
                <outbound type="class" confirmed="no">javax.persistence.Query</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.Query.getResultList(): java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.em</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="save(org.springframework.samples.petclinic.model.Pet): void">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.save(org.springframework.samples.petclinic.model.Pet): void</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.merge(java.lang.Object): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.persist(java.lang.Object): void</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Pet.getId(): java.lang.Integer</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.em</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JpaVetRepositoryImpl">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VetRepository</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Repository</outbound>
            <feature confirmed="yes">
                <name simple-name="JpaVetRepositoryImpl()">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.JpaVetRepositoryImpl()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="em">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.em</name>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="class" confirmed="no">javax.persistence.PersistenceContext</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findAll(): java.util.Collection">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.findAll(): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.createQuery(java.lang.String): javax.persistence.Query</outbound>
                <outbound type="class" confirmed="no">javax.persistence.Query</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.Query.getResultList(): java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.em</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="JpaVisitRepositoryImpl">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Repository</outbound>
            <feature confirmed="yes">
                <name simple-name="JpaVisitRepositoryImpl()">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.JpaVisitRepositoryImpl()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="em">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.em</name>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="class" confirmed="no">javax.persistence.PersistenceContext</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findByPetId(java.lang.Integer): java.util.List">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.findByPetId(java.lang.Integer): java.util.List</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.createQuery(java.lang.String): javax.persistence.Query</outbound>
                <outbound type="class" confirmed="no">javax.persistence.Query</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.Query.getResultList(): java.util.List</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.Query.setParameter(java.lang.String, java.lang.Object): javax.persistence.Query</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.em</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="save(org.springframework.samples.petclinic.model.Visit): void">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.save(org.springframework.samples.petclinic.model.Visit): void</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">javax.persistence.EntityManager</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.merge(java.lang.Object): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">javax.persistence.EntityManager.persist(java.lang.Object): void</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Visit.getId(): java.lang.Integer</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.em</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="package-info">org.springframework.samples.petclinic.repository.jpa.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name simple-name="org.springframework.samples.petclinic.repository.springdatajpa">org.springframework.samples.petclinic.repository.springdatajpa</name>
        <class confirmed="yes">
            <name simple-name="SpringDataOwnerRepository">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.data.repository.Repository</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
            <feature confirmed="yes">
                <name simple-name="findById(int): org.springframework.samples.petclinic.model.Owner">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository.findById(int): org.springframework.samples.petclinic.model.Owner</name>
                <outbound type="class" confirmed="no">org.springframework.data.jpa.repository.Query</outbound>
                <outbound type="class" confirmed="no">org.springframework.data.repository.query.Param</outbound>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findByLastName(java.lang.String): java.util.Collection">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataOwnerRepository.findByLastName(java.lang.String): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">org.springframework.data.jpa.repository.Query</outbound>
                <outbound type="class" confirmed="no">org.springframework.data.repository.query.Param</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="SpringDataPetRepository">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.data.repository.Repository</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository</outbound>
            <feature confirmed="yes">
                <name simple-name="findPetTypes(): java.util.List">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataPetRepository.findPetTypes(): java.util.List</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="no">org.springframework.data.jpa.repository.Query</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="SpringDataVetRepository">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVetRepository</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.data.repository.Repository</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VetRepository</outbound>
        </class>
        <class confirmed="yes">
            <name simple-name="SpringDataVisitRepository">org.springframework.samples.petclinic.repository.springdatajpa.SpringDataVisitRepository</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.data.repository.Repository</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name simple-name="org.springframework.samples.petclinic.service">org.springframework.samples.petclinic.service</name>
        <class confirmed="yes">
            <name simple-name="ClinicService">org.springframework.samples.petclinic.service.ClinicService</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.PetTypeFormatter(org.springframework.samples.petclinic.service.ClinicService)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.clinicService</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.VetController(org.springframework.samples.petclinic.service.ClinicService)</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.clinicService</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</inbound>
            <feature confirmed="yes">
                <name simple-name="findOwnerById(int): org.springframework.samples.petclinic.model.Owner">org.springframework.samples.petclinic.service.ClinicService.findOwnerById(int): org.springframework.samples.petclinic.model.Owner</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findOwnerByLastName(java.lang.String): java.util.Collection">org.springframework.samples.petclinic.service.ClinicService.findOwnerByLastName(java.lang.String): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findPetById(int): org.springframework.samples.petclinic.model.Pet">org.springframework.samples.petclinic.service.ClinicService.findPetById(int): org.springframework.samples.petclinic.model.Pet</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findPetTypes(): java.util.Collection">org.springframework.samples.petclinic.service.ClinicService.findPetTypes(): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findVets(): java.util.Collection">org.springframework.samples.petclinic.service.ClinicService.findVets(): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findVisitsByPetId(int): java.util.Collection">org.springframework.samples.petclinic.service.ClinicService.findVisitsByPetId(int): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="saveOwner(org.springframework.samples.petclinic.model.Owner): void">org.springframework.samples.petclinic.service.ClinicService.saveOwner(org.springframework.samples.petclinic.model.Owner): void</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="savePet(org.springframework.samples.petclinic.model.Pet): void">org.springframework.samples.petclinic.service.ClinicService.savePet(org.springframework.samples.petclinic.model.Pet): void</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="saveVisit(org.springframework.samples.petclinic.model.Visit): void">org.springframework.samples.petclinic.service.ClinicService.saveVisit(org.springframework.samples.petclinic.model.Visit): void</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="ClinicServiceImpl">org.springframework.samples.petclinic.service.ClinicServiceImpl</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Service</outbound>
            <feature confirmed="yes">
                <name simple-name="ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.springframework.beans.factory.annotation.Autowired</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VetRepository</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ownerRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.petRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.vetRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.visitRepository</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findOwnerById(int): org.springframework.samples.petclinic.model.Owner">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerById(int): org.springframework.samples.petclinic.model.Owner</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository.findById(int): org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ownerRepository</outbound>
                <outbound type="class" confirmed="no">org.springframework.transaction.annotation.Transactional</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findOwnerByLastName(java.lang.String): java.util.Collection">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerByLastName(java.lang.String): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository.findByLastName(java.lang.String): java.util.Collection</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ownerRepository</outbound>
                <outbound type="class" confirmed="no">org.springframework.transaction.annotation.Transactional</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findPetById(int): org.springframework.samples.petclinic.model.Pet">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetById(int): org.springframework.samples.petclinic.model.Pet</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository.findById(int): org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.petRepository</outbound>
                <outbound type="class" confirmed="no">org.springframework.transaction.annotation.Transactional</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findPetTypes(): java.util.Collection">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetTypes(): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository.findPetTypes(): java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.petRepository</outbound>
                <outbound type="class" confirmed="no">org.springframework.transaction.annotation.Transactional</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findVets(): java.util.Collection">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVets(): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">org.springframework.cache.annotation.Cacheable</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VetRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.VetRepository.findAll(): java.util.Collection</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.vetRepository</outbound>
                <outbound type="class" confirmed="no">org.springframework.transaction.annotation.Transactional</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="findVisitsByPetId(int): java.util.Collection">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVisitsByPetId(int): java.util.Collection</name>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository.findByPetId(java.lang.Integer): java.util.List</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.visitRepository</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="ownerRepository">org.springframework.samples.petclinic.service.ClinicServiceImpl.ownerRepository</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerById(int): org.springframework.samples.petclinic.model.Owner</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerByLastName(java.lang.String): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveOwner(org.springframework.samples.petclinic.model.Owner): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="petRepository">org.springframework.samples.petclinic.service.ClinicServiceImpl.petRepository</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetTypes(): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.savePet(org.springframework.samples.petclinic.model.Pet): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="saveOwner(org.springframework.samples.petclinic.model.Owner): void">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveOwner(org.springframework.samples.petclinic.model.Owner): void</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Owner</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.OwnerRepository.save(org.springframework.samples.petclinic.model.Owner): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ownerRepository</outbound>
                <outbound type="class" confirmed="no">org.springframework.transaction.annotation.Transactional</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="savePet(org.springframework.samples.petclinic.model.Pet): void">org.springframework.samples.petclinic.service.ClinicServiceImpl.savePet(org.springframework.samples.petclinic.model.Pet): void</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.PetRepository.save(org.springframework.samples.petclinic.model.Pet): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.petRepository</outbound>
                <outbound type="class" confirmed="no">org.springframework.transaction.annotation.Transactional</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="saveVisit(org.springframework.samples.petclinic.model.Visit): void">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveVisit(org.springframework.samples.petclinic.model.Visit): void</name>
                <outbound type="class" confirmed="no">org.springframework.samples.petclinic.model.Visit</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository.save(org.springframework.samples.petclinic.model.Visit): void</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.visitRepository</outbound>
                <outbound type="class" confirmed="no">org.springframework.transaction.annotation.Transactional</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="vetRepository">org.springframework.samples.petclinic.service.ClinicServiceImpl.vetRepository</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VetRepository</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVets(): java.util.Collection</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="visitRepository">org.springframework.samples.petclinic.service.ClinicServiceImpl.visitRepository</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.VisitRepository</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.ClinicServiceImpl(org.springframework.samples.petclinic.repository.PetRepository, org.springframework.samples.petclinic.repository.VetRepository, org.springframework.samples.petclinic.repository.OwnerRepository, org.springframework.samples.petclinic.repository.VisitRepository)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVisitsByPetId(int): java.util.Collection</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name simple-name="org.springframework.samples.petclinic.util">org.springframework.samples.petclinic.util</name>
        <class confirmed="yes">
            <name simple-name="CallMonitoringAspect">org.springframework.samples.petclinic.util.CallMonitoringAspect</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.aspectj.lang.annotation.Aspect</outbound>
            <outbound type="class" confirmed="no">org.springframework.jmx.export.annotation.ManagedResource</outbound>
            <feature confirmed="yes">
                <name simple-name="CallMonitoringAspect()">org.springframework.samples.petclinic.util.CallMonitoringAspect.CallMonitoringAspect()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.accumulatedCallTime</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.callCount</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.enabled</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="accumulatedCallTime">org.springframework.samples.petclinic.util.CallMonitoringAspect.accumulatedCallTime</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.CallMonitoringAspect()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.getCallTime(): long</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.reset(): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="callCount">org.springframework.samples.petclinic.util.CallMonitoringAspect.callCount</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.CallMonitoringAspect()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.getCallCount(): int</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.getCallTime(): long</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.reset(): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="enabled">org.springframework.samples.petclinic.util.CallMonitoringAspect.enabled</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.CallMonitoringAspect()</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.isEnabled(): boolean</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.setEnabled(boolean): void</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getCallCount(): int">org.springframework.samples.petclinic.util.CallMonitoringAspect.getCallCount(): int</name>
                <outbound type="class" confirmed="no">org.springframework.jmx.export.annotation.ManagedAttribute</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.callCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getCallTime(): long">org.springframework.samples.petclinic.util.CallMonitoringAspect.getCallTime(): long</name>
                <outbound type="class" confirmed="no">org.springframework.jmx.export.annotation.ManagedAttribute</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.accumulatedCallTime</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.callCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.lang.Throwable</outbound>
                <outbound type="class" confirmed="no">org.aspectj.lang.ProceedingJoinPoint</outbound>
                <outbound type="feature" confirmed="no">org.aspectj.lang.ProceedingJoinPoint.proceed(): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">org.aspectj.lang.ProceedingJoinPoint.toShortString(): java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.aspectj.lang.annotation.Around</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.accumulatedCallTime</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.callCount</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.enabled</outbound>
                <outbound type="class" confirmed="no">org.springframework.util.StopWatch</outbound>
                <outbound type="feature" confirmed="no">org.springframework.util.StopWatch.StopWatch(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">org.springframework.util.StopWatch.getTotalTimeMillis(): long</outbound>
                <outbound type="feature" confirmed="no">org.springframework.util.StopWatch.start(java.lang.String): void</outbound>
                <outbound type="feature" confirmed="no">org.springframework.util.StopWatch.stop(): void</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="isEnabled(): boolean">org.springframework.samples.petclinic.util.CallMonitoringAspect.isEnabled(): boolean</name>
                <outbound type="class" confirmed="no">org.springframework.jmx.export.annotation.ManagedAttribute</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.enabled</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="reset(): void">org.springframework.samples.petclinic.util.CallMonitoringAspect.reset(): void</name>
                <outbound type="class" confirmed="no">org.springframework.jmx.export.annotation.ManagedOperation</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.accumulatedCallTime</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.callCount</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="setEnabled(boolean): void">org.springframework.samples.petclinic.util.CallMonitoringAspect.setEnabled(boolean): void</name>
                <outbound type="class" confirmed="no">org.springframework.jmx.export.annotation.ManagedAttribute</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.enabled</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="EntityUtils">org.springframework.samples.petclinic.util.EntityUtils</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name simple-name="EntityUtils()">org.springframework.samples.petclinic.util.EntityUtils.EntityUtils()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity">org.springframework.samples.petclinic.util.EntityUtils.getById(java.util.Collection, java.lang.Class, int): org.springframework.samples.petclinic.model.BaseEntity</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInstance(java.lang.Object): boolean</outbound>
                <outbound type="class" confirmed="no">java.lang.Integer</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.intValue(): int</outbound>
                <outbound type="feature" confirmed="no">java.lang.Integer.valueOf(int): java.lang.Integer</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator(): java.util.Iterator</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext(): boolean</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next(): java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">org.springframework.orm.ObjectRetrievalFailureException.ObjectRetrievalFailureException(java.lang.Class, java.lang.Object)</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.BaseEntity.getId(): java.lang.Integer</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl.loadPetsAndVisits(org.springframework.samples.petclinic.model.Owner): void</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl.findById(int): org.springframework.samples.petclinic.model.Pet</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl.findAll(): java.util.Collection</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="yes">
        <name simple-name="org.springframework.samples.petclinic.web">org.springframework.samples.petclinic.web</name>
        <class confirmed="yes">
            <name simple-name="CrashController">org.springframework.samples.petclinic.web.CrashController</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Controller</outbound>
            <feature confirmed="yes">
                <name simple-name="CrashController()">org.springframework.samples.petclinic.web.CrashController.CrashController()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="triggerException(): java.lang.String">org.springframework.samples.petclinic.web.CrashController.triggerException(): java.lang.String</name>
                <outbound type="feature" confirmed="no">java.lang.RuntimeException.RuntimeException(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">org.springframework.web.bind.annotation.GetMapping</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="PetTypeFormatter">org.springframework.samples.petclinic.web.PetTypeFormatter</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.format.Formatter</outbound>
            <feature confirmed="yes">
                <name simple-name="PetTypeFormatter(org.springframework.samples.petclinic.service.ClinicService)">org.springframework.samples.petclinic.web.PetTypeFormatter.PetTypeFormatter(org.springframework.samples.petclinic.service.ClinicService)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.springframework.beans.factory.annotation.Autowired</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.clinicService</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="clinicService">org.springframework.samples.petclinic.web.PetTypeFormatter.clinicService</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.PetTypeFormatter(org.springframework.samples.petclinic.service.ClinicService)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="parse(java.lang.String, java.util.Locale): java.lang.Object">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): java.lang.Object</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): org.springframework.samples.petclinic.model.PetType</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object): boolean</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String): java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString(): java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.text.ParseException</outbound>
                <outbound type="feature" confirmed="no">java.text.ParseException.ParseException(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator(): java.util.Iterator</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext(): boolean</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next(): java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.PetType.getName(): java.lang.String</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.findPetTypes(): java.util.Collection</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.clinicService</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.parse(java.lang.String, java.util.Locale): java.lang.Object</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="print(java.lang.Object, java.util.Locale): java.lang.String">org.springframework.samples.petclinic.web.PetTypeFormatter.print(java.lang.Object, java.util.Locale): java.lang.String</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(org.springframework.samples.petclinic.model.PetType, java.util.Locale): java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="print(org.springframework.samples.petclinic.model.PetType, java.util.Locale): java.lang.String">org.springframework.samples.petclinic.web.PetTypeFormatter.print(org.springframework.samples.petclinic.model.PetType, java.util.Locale): java.lang.String</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Locale</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.PetType.getName(): java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetTypeFormatter.print(java.lang.Object, java.util.Locale): java.lang.String</inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="PetValidator">org.springframework.samples.petclinic.web.PetValidator</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.validation.Validator</outbound>
            <feature confirmed="yes">
                <name simple-name="PetValidator()">org.springframework.samples.petclinic.web.PetValidator.PetValidator()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="REQUIRED">org.springframework.samples.petclinic.web.PetValidator.REQUIRED</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="supports(java.lang.Class): boolean">org.springframework.samples.petclinic.web.PetValidator.supports(java.lang.Class): boolean</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAssignableFrom(java.lang.Class): boolean</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="validate(java.lang.Object, org.springframework.validation.Errors): void">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.time.LocalDate</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Pet</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getBirthDate(): java.time.LocalDate</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Pet.getName(): java.lang.String</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Pet.getType(): org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="no">org.springframework.samples.petclinic.model.Pet.isNew(): boolean</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.PetType</outbound>
                <outbound type="feature" confirmed="no">org.springframework.util.StringUtils.hasLength(java.lang.String): boolean</outbound>
                <outbound type="class" confirmed="no">org.springframework.validation.Errors</outbound>
                <outbound type="feature" confirmed="no">org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String): void</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="VetController">org.springframework.samples.petclinic.web.VetController</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">org.springframework.stereotype.Controller</outbound>
            <feature confirmed="yes">
                <name simple-name="VetController(org.springframework.samples.petclinic.service.ClinicService)">org.springframework.samples.petclinic.web.VetController.VetController(org.springframework.samples.petclinic.service.ClinicService)</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">org.springframework.beans.factory.annotation.Autowired</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.clinicService</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="clinicService">org.springframework.samples.petclinic.web.VetController.clinicService</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.VetController(org.springframework.samples.petclinic.service.ClinicService)</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="getVets(): org.springframework.samples.petclinic.model.Vets">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</name>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection): boolean</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vets</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vets.Vets()</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.model.Vets.getVetList(): java.util.List</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicService.findVets(): java.util.Collection</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.clinicService</outbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showJsonVetList(): org.springframework.samples.petclinic.model.Vets</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map): java.lang.String</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showXmlVetList(): org.springframework.samples.petclinic.model.Vets</inbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="showJsonVetList(): org.springframework.samples.petclinic.model.Vets">org.springframework.samples.petclinic.web.VetController.showJsonVetList(): org.springframework.samples.petclinic.model.Vets</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vets</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</outbound>
                <outbound type="class" confirmed="no">org.springframework.web.bind.annotation.GetMapping</outbound>
                <outbound type="class" confirmed="no">org.springframework.web.bind.annotation.ResponseBody</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="showVetList(java.util.Map): java.lang.String">org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map): java.lang.String</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object): java.lang.Object</outbound>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vets</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</outbound>
                <outbound type="class" confirmed="no">org.springframework.web.bind.annotation.GetMapping</outbound>
            </feature>
            <feature confirmed="yes">
                <name simple-name="showXmlVetList(): org.springframework.samples.petclinic.model.Vets">org.springframework.samples.petclinic.web.VetController.showXmlVetList(): org.springframework.samples.petclinic.model.Vets</name>
                <outbound type="class" confirmed="yes">org.springframework.samples.petclinic.model.Vets</outbound>
                <outbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.getVets(): org.springframework.samples.petclinic.model.Vets</outbound>
                <outbound type="class" confirmed="no">org.springframework.web.bind.annotation.GetMapping</outbound>
                <outbound type="class" confirmed="no">org.springframework.web.bind.annotation.ResponseBody</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name simple-name="package-info">org.springframework.samples.petclinic.web.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.stereotype">org.springframework.stereotype</name>
        <class confirmed="no">
            <name simple-name="Controller">org.springframework.stereotype.Controller</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.web.CrashController</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.web.VetController</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="Repository">org.springframework.stereotype.Repository</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcOwnerRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcPetRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVetRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.JdbcVisitRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl</inbound>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="Service">org.springframework.stereotype.Service</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.transaction.annotation">org.springframework.transaction.annotation</name>
        <class confirmed="no">
            <name simple-name="Transactional">org.springframework.transaction.annotation.Transactional</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerById(int): org.springframework.samples.petclinic.model.Owner</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findOwnerByLastName(java.lang.String): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetById(int): org.springframework.samples.petclinic.model.Pet</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findPetTypes(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.findVets(): java.util.Collection</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveOwner(org.springframework.samples.petclinic.model.Owner): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.savePet(org.springframework.samples.petclinic.model.Pet): void</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.service.ClinicServiceImpl.saveVisit(org.springframework.samples.petclinic.model.Visit): void</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.util">org.springframework.util</name>
        <class confirmed="no">
            <name simple-name="Assert">org.springframework.util.Assert</name>
            <feature confirmed="no">
                <name simple-name="notNull(java.lang.Object, java.lang.String): void">org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor.OneToManyResultSetExtractor(org.springframework.jdbc.core.RowMapper, org.springframework.jdbc.core.RowMapper, org.springframework.samples.petclinic.repository.jdbc.OneToManyResultSetExtractor$ExpectedResults)</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="StopWatch">org.springframework.util.StopWatch</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            <feature confirmed="no">
                <name simple-name="StopWatch(java.lang.String)">org.springframework.util.StopWatch.StopWatch(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getTotalTimeMillis(): long">org.springframework.util.StopWatch.getTotalTimeMillis(): long</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="start(java.lang.String): void">org.springframework.util.StopWatch.start(java.lang.String): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="stop(): void">org.springframework.util.StopWatch.stop(): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.util.CallMonitoringAspect.invoke(org.aspectj.lang.ProceedingJoinPoint): java.lang.Object</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="StringUtils">org.springframework.util.StringUtils</name>
            <feature confirmed="no">
                <name simple-name="hasLength(java.lang.String): boolean">org.springframework.util.StringUtils.hasLength(java.lang.String): boolean</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.validation">org.springframework.validation</name>
        <class confirmed="no">
            <name simple-name="Errors">org.springframework.validation.Errors</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            <feature confirmed="no">
                <name simple-name="rejectValue(java.lang.String, java.lang.String, java.lang.String): void">org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator.validate(java.lang.Object, org.springframework.validation.Errors): void</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name simple-name="Validator">org.springframework.validation.Validator</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.web.PetValidator</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.web.bind.annotation">org.springframework.web.bind.annotation</name>
        <class confirmed="no">
            <name simple-name="GetMapping">org.springframework.web.bind.annotation.GetMapping</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.CrashController.triggerException(): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showJsonVetList(): org.springframework.samples.petclinic.model.Vets</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showVetList(java.util.Map): java.lang.String</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showXmlVetList(): org.springframework.samples.petclinic.model.Vets</inbound>
        </class>
        <class confirmed="no">
            <name simple-name="ResponseBody">org.springframework.web.bind.annotation.ResponseBody</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showJsonVetList(): org.springframework.samples.petclinic.model.Vets</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.web.VetController.showXmlVetList(): org.springframework.samples.petclinic.model.Vets</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.web.context">org.springframework.web.context</name>
        <class confirmed="no">
            <name simple-name="WebApplicationContext">org.springframework.web.context.WebApplicationContext</name>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createRootApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
            <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createServletApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.web.context.support">org.springframework.web.context.support</name>
        <class confirmed="no">
            <name simple-name="XmlWebApplicationContext">org.springframework.web.context.support.XmlWebApplicationContext</name>
            <feature confirmed="no">
                <name simple-name="XmlWebApplicationContext()">org.springframework.web.context.support.XmlWebApplicationContext.XmlWebApplicationContext()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createRootApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createServletApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="getEnvironment(): org.springframework.core.env.ConfigurableEnvironment">org.springframework.web.context.support.XmlWebApplicationContext.getEnvironment(): org.springframework.core.env.ConfigurableEnvironment</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createRootApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setConfigLocation(java.lang.String): void">org.springframework.web.context.support.XmlWebApplicationContext.setConfigLocation(java.lang.String): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createServletApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
            </feature>
            <feature confirmed="no">
                <name simple-name="setConfigLocations(java.lang.String[]): void">org.springframework.web.context.support.XmlWebApplicationContext.setConfigLocations(java.lang.String[]): void</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.createRootApplicationContext(): org.springframework.web.context.WebApplicationContext</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.web.filter">org.springframework.web.filter</name>
        <class confirmed="no">
            <name simple-name="CharacterEncodingFilter">org.springframework.web.filter.CharacterEncodingFilter</name>
            <feature confirmed="no">
                <name simple-name="CharacterEncodingFilter(java.lang.String, boolean)">org.springframework.web.filter.CharacterEncodingFilter.CharacterEncodingFilter(java.lang.String, boolean)</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.getServletFilters(): javax.servlet.Filter[]</inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name simple-name="org.springframework.web.servlet.support">org.springframework.web.servlet.support</name>
        <class confirmed="no">
            <name simple-name="AbstractDispatcherServletInitializer">org.springframework.web.servlet.support.AbstractDispatcherServletInitializer</name>
            <inbound type="class" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer</inbound>
            <feature confirmed="no">
                <name simple-name="AbstractDispatcherServletInitializer()">org.springframework.web.servlet.support.AbstractDispatcherServletInitializer.AbstractDispatcherServletInitializer()</name>
                <inbound type="feature" confirmed="yes">org.springframework.samples.petclinic.PetclinicInitializer.PetclinicInitializer()</inbound>
            </feature>
        </class>
    </package>
</dependencies>
